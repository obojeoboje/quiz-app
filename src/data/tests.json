[
  {
  "title": "REST API — Тест 1",
  "topic": "REST API",
  "questions": [
    {
      "question": "Что означает метод GET?",
      "options": ["Создание ресурса", "Удаление ресурса", "Получение ресурса", "Обновление ресурса"],
      "answer": 2
    },
    {
      "question": "Какой код ответа означает успех?",
      "options": ["200", "404", "500", "403"],
      "answer": 0
    },
    {
      "question": "Что означает метод POST?",
      "options": ["Удаление ресурса", "Создание нового ресурса", "Получение ресурса", "Обновление ресурса"],
      "answer": 1
    },
    {
      "question": "Что делает метод PUT?",
      "options": ["Создаёт новый ресурс", "Обновляет существующий ресурс", "Удаляет ресурс", "Получает список ресурсов"],
      "answer": 1
    },
    {
      "question": "Что означает код 404?",
      "options": ["Ресурс не найден", "Ошибка сервера", "Доступ запрещён", "Успешный ответ"],
      "answer": 0
    },
    {
      "question": "Какой формат чаще всего используется в REST API?",
      "options": ["CSV", "JSON", "DOCX", "PDF"],
      "answer": 1
    },
    {
      "question": "Что такое эндпоинт (endpoint)?",
      "options": ["Метод API", "URL, по которому доступен ресурс", "Формат данных", "Ключ авторизации"],
      "answer": 1
    },
    {
      "question": "Что делает метод DELETE?",
      "options": ["Создаёт ресурс", "Обновляет ресурс", "Удаляет ресурс", "Получает ресурс"],
      "answer": 2
    },
    {
      "question": "Какой заголовок обычно используется для указания типа содержимого?",
      "options": ["Content-Type", "Authorization", "Accept", "User-Agent"],
      "answer": 0
    },
    {
      "question": "Какой код ответа означает 'Нет контента'?",
      "options": ["200", "201", "204", "400"],
      "answer": 2
    }
  ]
},
{
  "title": "REST API — Тест 2",
  "topic": "REST API",
  "questions": [
    {
      "question": "Какой HTTP-метод обычно используется для частичного обновления ресурса?",
      "options": ["PUT", "PATCH", "POST", "OPTIONS"],
      "answer": 1
    },
    {
      "question": "Что означает код ответа 201?",
      "options": ["Обновление выполнено", "Создан новый ресурс", "Ошибка сервера", "Нет содержимого"],
      "answer": 1
    },
    {
      "question": "Для чего используется заголовок Authorization?",
      "options": ["Передача тела запроса", "Указание формата данных", "Аутентификация пользователя", "Выбор метода запроса"],
      "answer": 2
    },
    {
      "question": "Что означает idempotent-метод в контексте REST?",
      "options": [
        "Метод, который возвращает разные результаты при повторных запросах",
        "Метод, который вызывает ошибку при повторении",
        "Метод, который можно вызывать многократно без изменения результата",
        "Метод, который работает только при первом вызове"
      ],
      "answer": 2
    },
    {
      "question": "Что такое REST в аббревиатуре REST API?",
      "options": [
        "Reliable Exchange of Secure Tokens",
        "Representational State Transfer",
        "Remote Execution and Service Testing",
        "Resource Exchange via Secure Transport"
      ],
      "answer": 1
    },
    {
      "question": "Какой код ответа означает 'Запрос принят, но не обработан полностью'?",
      "options": ["200", "202", "204", "304"],
      "answer": 1
    },
    {
      "question": "Что из ниже перечисленного **не является** принципом REST?",
      "options": [
        "Клиент-серверная архитектура",
        "Сохранение состояния на сервере",
        "Унифицированный интерфейс",
        "Кэшируемость"
      ],
      "answer": 1
    },
    {
      "question": "Какой код ответа сообщает, что необходимо аутентификация?",
      "options": ["403", "500", "401", "200"],
      "answer": 2
    },
    {
      "question": "Что такое ресурс в REST API?",
      "options": [
        "HTTP-запрос",
        "Объект, доступный по URL",
        "Код ответа",
        "Метод взаимодействия"
      ],
      "answer": 1
    },
    {
      "question": "Что делает метод OPTIONS?",
      "options": [
        "Обновляет ресурс",
        "Удаляет ресурс",
        "Запрашивает доступные методы для ресурса",
        "Создаёт ресурс"
      ],
      "answer": 2
    }
  ]
},
{
  "title": "REST API — Тест 3",
  "topic": "REST API",
  "questions": [
    {
      "question": "Какой код ответа означает 'Запрещено' (forbidden)?",
      "options": ["401", "403", "404", "500"],
      "answer": 1
    },
    {
      "question": "Что такое ресурсный URI в REST API?",
      "options": [
        "Параметр запроса",
        "Метод HTTP",
        "Уникальный путь к ресурсу",
        "Формат тела ответа"
      ],
      "answer": 2
    },
    {
      "question": "Какой метод используется для получения заголовков ресурса без тела ответа?",
      "options": ["HEAD", "GET", "OPTIONS", "TRACE"],
      "answer": 0
    },
    {
      "question": "Что означает код 500 в REST API?",
      "options": [
        "Не найдено",
        "Ошибка клиента",
        "Внутренняя ошибка сервера",
        "Нет авторизации"
      ],
      "answer": 2
    },
    {
      "question": "Какие из следующих методов являются безопасными (не изменяют данные)?",
      "options": ["GET и HEAD", "POST и PUT", "DELETE и PATCH", "PUT и OPTIONS"],
      "answer": 0
    },
    {
      "question": "Что такое сериализация в контексте REST API?",
      "options": [
        "Передача HTTP-заголовков",
        "Преобразование данных в формат JSON или XML",
        "Установка токена авторизации",
        "Сортировка списка данных"
      ],
      "answer": 1
    },
    {
      "question": "Какой HTTP-заголовок используется для передачи токена авторизации?",
      "options": ["Auth-Token", "Authorization", "X-Auth", "Access-Token"],
      "answer": 1
    },
    {
      "question": "Что такое кэширование в контексте REST?",
      "options": [
        "Запрет доступа к ресурсу",
        "Сохранение ответа для повторного использования",
        "Удаление старых данных",
        "Хранение логов запросов"
      ],
      "answer": 1
    },
    {
      "question": "Что возвращает сервер при успешном DELETE-запросе (в идеале)?",
      "options": ["201 Created", "204 No Content", "200 OK с телом", "304 Not Modified"],
      "answer": 1
    },
    {
      "question": "Какой код ответа указывает, что ресурс не изменялся с момента последнего запроса?",
      "options": ["304", "302", "200", "403"],
      "answer": 0
    }
  ]
},
  {
  "title": "SQL — Тест 1",
  "topic": "SQL",
  "questions": [
    {
      "question": "Какой оператор используется для выборки данных?",
      "options": ["SELECT", "INSERT", "UPDATE", "DELETE"],
      "answer": 0
    },
    {
      "question": "Как выбрать все столбцы из таблицы?",
      "options": ["SELECT *", "SELECT ALL", "GET *", "FETCH ALL"],
      "answer": 0
    },
    {
      "question": "Какой оператор используется для добавления новых данных?",
      "options": ["INSERT", "ADD", "UPDATE", "APPEND"],
      "answer": 0
    },
    {
      "question": "Что делает оператор WHERE?",
      "options": ["Сортирует данные", "Фильтрует строки по условию", "Обновляет данные", "Создаёт таблицу"],
      "answer": 1
    },
    {
      "question": "Какой оператор изменяет существующие данные?",
      "options": ["MODIFY", "CHANGE", "UPDATE", "ALTER"],
      "answer": 2
    },
    {
      "question": "Какой оператор удаляет строки из таблицы?",
      "options": ["REMOVE", "DELETE", "DROP", "TRUNCATE"],
      "answer": 1
    },
    {
      "question": "Как объединить строки из двух таблиц по общему полю?",
      "options": ["JOIN", "UNION", "MERGE", "GROUP"],
      "answer": 0
    },
    {
      "question": "Что делает оператор ORDER BY?",
      "options": ["Фильтрует строки", "Удаляет строки", "Сортирует строки", "Объединяет таблицы"],
      "answer": 2
    },
    {
      "question": "Как посчитать количество строк в таблице?",
      "options": ["SUM()", "COUNT()", "LENGTH()", "TOTAL()"],
      "answer": 1
    },
    {
      "question": "Какая команда используется для изменения структуры таблицы?",
      "options": ["UPDATE", "CHANGE", "ALTER", "MODIFY"],
      "answer": 2
    }
  ]
},
{
  "title": "SQL — Тест 2",
  "topic": "SQL",
  "questions": [
    {
      "question": "Как выбрать уникальные значения из столбца?",
      "options": ["SELECT ALL", "SELECT UNIQUE", "SELECT DISTINCT", "SELECT ONLY"],
      "answer": 2
    },
    {
      "question": "Что делает оператор LIKE в SQL?",
      "options": [
        "Сравнивает точные значения",
        "Используется для поиска по шаблону",
        "Сортирует данные",
        "Проверяет тип данных"
      ],
      "answer": 1
    },
    {
      "question": "Как задать условие с несколькими альтернативами?",
      "options": ["WHERE ... ALL", "WHERE ... OR", "WHERE ... IN", "WHERE ... BETWEEN"],
      "answer": 2
    },
    {
      "question": "Что делает оператор BETWEEN?",
      "options": [
        "Проверяет равенство значений",
        "Сравнивает строки",
        "Проверяет попадание значения в диапазон",
        "Определяет внешние ключи"
      ],
      "answer": 2
    },
    {
      "question": "Как удалить все данные из таблицы без удаления самой таблицы?",
      "options": ["DELETE TABLE", "DROP TABLE", "TRUNCATE TABLE", "REMOVE * FROM"],
      "answer": 2
    },
    {
      "question": "Что делает оператор GROUP BY?",
      "options": [
        "Сортирует строки",
        "Фильтрует строки",
        "Группирует строки с одинаковыми значениями",
        "Удаляет дубликаты"
      ],
      "answer": 2
    },
    {
      "question": "Как объединить результаты двух SELECT-запросов в один список?",
      "options": ["JOIN", "GROUP BY", "UNION", "COMBINE"],
      "answer": 2
    },
    {
      "question": "Какая функция возвращает среднее значение?",
      "options": ["SUM()", "AVG()", "COUNT()", "MID()"],
      "answer": 1
    },
    {
      "question": "Какой тип JOIN возвращает только совпадающие строки из обеих таблиц?",
      "options": ["LEFT JOIN", "RIGHT JOIN", "FULL JOIN", "INNER JOIN"],
      "answer": 3
    },
    {
      "question": "Что делает оператор HAVING?",
      "options": [
        "Применяет условие к агрегированным данным",
        "Обновляет строки",
        "Удаляет записи",
        "Задаёт условие сортировки"
      ],
      "answer": 0
    }
  ]
},
{
  "title": "SQL — Тест 3",
  "topic": "SQL",
  "questions": [
    {
      "question": "Что такое первичный ключ (PRIMARY KEY)?",
      "options": [
        "Поле, которое может иметь одинаковые значения",
        "Поле, содержащее внешнюю ссылку",
        "Уникальный идентификатор строки в таблице",
        "Тип индекса"
      ],
      "answer": 2
    },
    {
      "question": "Что делает команда ALTER TABLE?",
      "options": [
        "Удаляет таблицу",
        "Изменяет структуру таблицы",
        "Очищает данные в таблице",
        "Обновляет значения в таблице"
      ],
      "answer": 1
    },
    {
      "question": "Какое ключевое слово используется для задания условия при вставке новых данных?",
      "options": ["WHERE", "ON", "IF", "не используется"],
      "answer": 3
    },
    {
      "question": "Какой результат вернёт COUNT(*)?",
      "options": [
        "Количество строк с ненулевыми значениями",
        "Количество строк в таблице, включая дубликаты и NULL",
        "Количество уникальных значений",
        "Количество строк без NULL"
      ],
      "answer": 1
    },
    {
      "question": "Что делает оператор IS NULL?",
      "options": [
        "Проверяет, что значение не NULL",
        "Удаляет NULL-значения",
        "Фильтрует строки со значением NULL",
        "Сравнивает числовые значения"
      ],
      "answer": 2
    },
    {
      "question": "Какой тип JOIN включает все строки из обеих таблиц, даже если нет совпадений?",
      "options": ["INNER JOIN", "LEFT JOIN", "RIGHT JOIN", "FULL OUTER JOIN"],
      "answer": 3
    },
    {
      "question": "Чем отличается DELETE от TRUNCATE?",
      "options": [
        "DELETE удаляет таблицу, а TRUNCATE — только данные",
        "DELETE можно использовать с WHERE, а TRUNCATE — нет",
        "TRUNCATE медленнее DELETE",
        "Они делают одно и то же"
      ],
      "answer": 1
    },
    {
      "question": "Что делает команда DROP TABLE?",
      "options": [
        "Удаляет все данные из таблицы",
        "Удаляет таблицу и всю её структуру",
        "Удаляет только первичный ключ",
        "Очищает таблицу без удаления"
      ],
      "answer": 1
    },
    {
      "question": "Какой тип данных используется для хранения текстов разной длины?",
      "options": ["INT", "VARCHAR", "BOOLEAN", "FLOAT"],
      "answer": 1
    },
    {
      "question": "Что делает команда RENAME TABLE?",
      "options": [
        "Переименовывает таблицу",
        "Создает таблицу",
        "Переименовывает столбцы",
        "Удаляет таблицу"
      ],
      "answer": 0
    }
  ]
},
{
  "title": "SQL — Тест 4",
  "topic": "SQL",
  "questions": [
    {
      "question": "Какое ключевое слово используется для создания новой таблицы?",
      "options": ["MAKE", "CREATE", "NEW", "TABLE"],
      "answer": 1
    },
    {
      "question": "Что делает ключевое слово DEFAULT при создании столбца?",
      "options": [
        "Ограничивает значения",
        "Задаёт внешний ключ",
        "Устанавливает значение по умолчанию",
        "Определяет тип данных"
      ],
      "answer": 2
    },
    {
      "question": "Какой тип индекса обеспечивает уникальность значений в столбце?",
      "options": ["INDEX", "UNIQUE", "PRIMARY", "FOREIGN"],
      "answer": 1
    },
    {
      "question": "Что делает подзапрос (subquery)?",
      "options": [
        "Обновляет таблицу",
        "Удаляет данные",
        "Выполняется внутри другого запроса",
        "Создаёт новую базу"
      ],
      "answer": 2
    },
    {
      "question": "Как выбрать строки, у которых значение больше 100 и меньше 200?",
      "options": [
        "WHERE value > 100, < 200",
        "WHERE value BETWEEN 100 AND 200",
        "WHERE value FROM 100 TO 200",
        "WHERE value = 100-200"
      ],
      "answer": 1
    },
    {
      "question": "Что делает команда INSERT INTO ... VALUES ...?",
      "options": [
        "Создает новую таблицу",
        "Добавляет строку в таблицу",
        "Обновляет существующую строку",
        "Удаляет строку"
      ],
      "answer": 1
    },
    {
      "question": "Какой оператор используется для объединения строк в одну?",
      "options": ["APPEND", "MERGE", "CONCAT", "JOIN"],
      "answer": 2
    },
    {
      "question": "Как получить текущую дату и время в SQL?",
      "options": ["NOW()", "CURRENT_DATE()", "GETDATE()", "SYSDATE()"],
      "answer": 0
    },
    {
      "question": "Что такое внешний ключ (FOREIGN KEY)?",
      "options": [
        "Поле, хранящее дату",
        "Ключ, ссылающийся на ключ другой таблицы",
        "Поле с уникальными значениями",
        "Ключ, автоматически инкрементируемый"
      ],
      "answer": 1
    },
    {
      "question": "Какая команда позволяет изменить имя столбца?",
      "options": [
        "MODIFY COLUMN",
        "UPDATE COLUMN",
        "ALTER TABLE ... RENAME COLUMN",
        "SET COLUMN NAME"
      ],
      "answer": 2
    }
  ]
},
{
  "title": "Devtools — Тест 1",
  "topic": "Devtools",
  "questions": [
    {
      "question": "Какая вкладка Devtools используется для анализа HTML-кода страницы?",
      "options": ["Console", "Elements", "Network", "Sources"],
      "answer": 1
    },
    {
      "question": "Где можно посмотреть ошибки JavaScript?",
      "options": ["Elements", "Sources", "Console", "Application"],
      "answer": 2
    },
    {
      "question": "Что отображается во вкладке Network?",
      "options": [
        "Запросы к серверу и ответы",
        "Ошибки JavaScript",
        "HTML-код страницы",
        "Куки и локальное хранилище"
      ],
      "answer": 0
    },
    {
      "question": "Какой статус-код означает успешный ответ сервера?",
      "options": ["404", "200", "500", "403"],
      "answer": 1
    },
    {
      "question": "Как перехватить и проанализировать запрос в Devtools?",
      "options": [
        "Перейти во вкладку Console",
        "Открыть вкладку Elements",
        "Включить фильтр во вкладке Network",
        "Открыть вкладку Performance"
      ],
      "answer": 2
    },
    {
      "question": "Где можно посмотреть куки и LocalStorage?",
      "options": ["Elements", "Network", "Console", "Application"],
      "answer": 3
    },
    {
      "question": "Можно ли с помощью Devtools отредактировать CSS на странице?",
      "options": ["Нет", "Да, во вкладке Elements", "Только с расширениями", "Только через сервер"],
      "answer": 1
    },
    {
      "question": "Что показывает вкладка Performance?",
      "options": ["Время загрузки и поведение страницы", "Ошибки верстки", "Файл robots.txt", "Только JS-ошибки"],
      "answer": 0
    },
    {
      "question": "Как вызвать Devtools в Chrome?",
      "options": ["Alt + F4", "Ctrl + P", "F12 или Ctrl + Shift + I", "Ctrl + Shift + Del"],
      "answer": 2
    },
    {
      "question": "Что можно делать во вкладке Sources?",
      "options": [
        "Редактировать базу данных",
        "Просматривать и отлаживать JS-код",
        "Устанавливать расширения",
        "Запускать запросы к API"
      ],
      "answer": 1
    }
  ]
},
{
  "title": "Devtools — Тест 2",
  "topic": "Devtools",
  "questions": [
    {
      "question": "Для чего используется вкладка Lighthouse в Chrome Devtools?",
      "options": [
        "Анализ производительности, SEO и доступности сайта",
        "Редактирование CSS-кода",
        "Работа с HTTP-заголовками",
        "Просмотр логов ошибок"
      ],
      "answer": 0
    },
    {
      "question": "Как сохранить HTML-элемент со страницы через Devtools?",
      "options": [
        "Нажать правой кнопкой по элементу и выбрать 'Save Element'",
        "Скопировать через контекстное меню 'Copy > Outer HTML'",
        "Сделать скриншот страницы",
        "Это невозможно"
      ],
      "answer": 1
    },
    {
      "question": "Какой вкладкой можно проверить, какие скрипты грузятся на странице?",
      "options": ["Console", "Sources", "Network", "Application"],
      "answer": 2
    },
    {
      "question": "Как в Devtools посмотреть DOM-события, связанные с элементом?",
      "options": [
        "Во вкладке Sources → Event Listeners",
        "Во вкладке Console → Events",
        "Во вкладке Network → Scripts",
        "Через вкладку Elements → Logs"
      ],
      "answer": 0
    },
    {
      "question": "Что показывает вкладка Coverage в Devtools?",
      "options": [
        "Скорость загрузки страницы",
        "Неиспользуемый CSS и JavaScript",
        "Ошибки доступа к API",
        "Количество загруженных изображений"
      ],
      "answer": 1
    },
    {
      "question": "Можно ли с помощью Devtools эмулировать мобильное устройство?",
      "options": ["Нет", "Да, через Device Toolbar", "Только через сторонние плагины", "Только в Firefox"],
      "answer": 1
    },
    {
      "question": "Как можно изменить значение атрибута HTML-элемента в Devtools?",
      "options": [
        "Через вкладку Console",
        "Через вкладку Sources",
        "Двойной клик по атрибуту во вкладке Elements",
        "Это невозможно"
      ],
      "answer": 2
    },
    {
      "question": "Где можно установить точку останова в JavaScript-коде?",
      "options": [
        "Во вкладке Console",
        "Во вкладке Sources на нужной строке кода",
        "Во вкладке Elements рядом с тегом script",
        "Во вкладке Application"
      ],
      "answer": 1
    },
    {
      "question": "Что делает команда `console.table()` в Devtools?",
      "options": [
        "Выводит данные в виде таблицы",
        "Выводит таблицу HTML-кода",
        "Создаёт таблицу в базе данных",
        "Очищает консоль"
      ],
      "answer": 0
    },
    {
      "question": "Где можно увидеть загруженные шрифты сайта?",
      "options": ["Elements", "Sources", "Application → Fonts", "Network → Fonts"],
      "answer": 3
    }
  ]
},
{
  "title": "Devtools — Тест 3",
  "topic": "Devtools",
  "questions": [
    {
      "question": "Где можно найти информацию об установленном localStorage на сайте?",
      "options": ["Console", "Sources", "Application → Local Storage", "Network → Storage"],
      "answer": 2
    },
    {
      "question": "Как отследить изменения в DOM в реальном времени?",
      "options": [
        "Открыть вкладку Performance",
        "Во вкладке Elements включить Observe DOM",
        "Включить Mutation Observer в Console",
        "Наблюдать изменения во вкладке Elements"
      ],
      "answer": 3
    },
    {
      "question": "Как временно отключить CSS-правило в Devtools?",
      "options": [
        "Удалить строку CSS",
        "Закомментировать в коде",
        "Снять галочку рядом с правилом в панели Styles",
        "Невозможно отключить правило"
      ],
      "answer": 2
    },
    {
      "question": "Что делает вкладка Security в Devtools?",
      "options": [
        "Показывает уязвимости к XSS",
        "Отображает информацию о HTTPS-сертификатах и шифровании",
        "Запускает антивирусную проверку",
        "Анализирует политику безопасности паролей"
      ],
      "answer": 1
    },
    {
      "question": "Можно ли просмотреть отправленные cookies с запросом во вкладке Network?",
      "options": ["Нет", "Да, во вкладке Headers", "Только во вкладке Application", "Только через расширение"],
      "answer": 1
    },
    {
      "question": "Как отфильтровать только XHR-запросы в Network?",
      "options": ["Включить фильтр XHR", "Использовать вкладку Sources", "Открыть вкладку Application", "Зайти в Console и использовать log filter"],
      "answer": 0
    },
    {
      "question": "Где можно посмотреть стек вызовов при ошибке в JavaScript?",
      "options": [
        "Console → Stack Trace",
        "Elements → Errors",
        "Sources → Stack View",
        "Console → Ошибка с раскрытием stack"
      ],
      "answer": 3
    },
    {
      "question": "Как можно проверить сетевые ошибки при загрузке изображений?",
      "options": [
        "Вкладка Elements",
        "Console",
        "Network с фильтром Img",
        "Application → Resources"
      ],
      "answer": 2
    },
    {
      "question": "Что такое 'Preserve log' в Devtools → Network?",
      "options": [
        "Сохраняет логи в файл",
        "Сохраняет логи при перезагрузке страницы",
        "Автоматически экспортирует трафик",
        "Сохраняет только ошибки"
      ],
      "answer": 1
    },
    {
      "question": "Как можно эмулировать медленное соединение в Devtools?",
      "options": [
        "Console → SetSpeed",
        "Network → Throttling",
        "Sources → Speed Settings",
        "Application → Connection"
      ],
      "answer": 1
    }
  ]
},
{
  "title": "Postman — Тест 1",
  "topic": "Postman",
  "questions": [
    {
      "question": "Для чего используется Postman?",
      "options": [
        "Тестирование веб-интерфейса",
        "Отправка и тестирование HTTP-запросов",
        "Редактирование баз данных",
        "Создание сайтов"
      ],
      "answer": 1
    },
    {
      "question": "Какой HTTP-метод чаще всего используется для получения данных?",
      "options": ["POST", "PUT", "GET", "DELETE"],
      "answer": 2
    },
    {
      "question": "Что такое коллекция в Postman?",
      "options": [
        "Список пользователей",
        "Набор тестов",
        "Набор связанных запросов",
        "Группа переменных"
      ],
      "answer": 2
    },
    {
      "question": "Какой статус-код означает успешный POST-запрос?",
      "options": ["200", "201", "204", "400"],
      "answer": 1
    },
    {
      "question": "Можно ли сохранять переменные в Postman?",
      "options": ["Нет", "Да, в окружениях (environments)", "Только вручную", "Только через плагины"],
      "answer": 1
    },
    {
      "question": "Что делает вкладка Body в Postman?",
      "options": [
        "Отображает логи",
        "Позволяет задать тело запроса",
        "Показывает статус ответа",
        "Проверяет ошибки"
      ],
      "answer": 1
    },
    {
      "question": "Какой тип тела запроса нужно выбрать для отправки JSON?",
      "options": ["form-data", "x-www-form-urlencoded", "raw + JSON", "text"],
      "answer": 2
    },
    {
      "question": "Можно ли автоматизировать тесты в Postman?",
      "options": ["Нет", "Да, с помощью скриптов в Tests", "Только через API", "Только вручную"],
      "answer": 1
    },
    {
      "question": "Что отображается во вкладке Headers?",
      "options": [
        "Список пользователей",
        "Ответ сервера",
        "Заголовки запроса и ответа",
        "Тело запроса"
      ],
      "answer": 2
    },
    {
      "question": "Какой тип запроса стоит выбрать для обновления ресурса?",
      "options": ["GET", "POST", "PUT", "DELETE"],
      "answer": 2
    }
  ]
},
{
  "title": "Postman — Тест 2",
  "topic": "Postman",
  "questions": [
    {
      "question": "Для чего используется вкладка Pre-request Script в Postman?",
      "options": [
        "Для написания тестов после запроса",
        "Для создания коллекций",
        "Для выполнения JavaScript-кода до отправки запроса",
        "Для настройки внешнего API"
      ],
      "answer": 2
    },
    {
      "question": "Что делает тест в Postman с использованием команды `pm.response.to.have.status(200);`?",
      "options": [
        "Проверяет наличие заголовка",
        "Проверяет, что ответ имеет статус 200",
        "Создаёт новый статус",
        "Отправляет дополнительный запрос"
      ],
      "answer": 1
    },
    {
      "question": "Как задать глобальную переменную в Postman?",
      "options": [
        "pm.globals.set(\"key\", \"value\")",
        "pm.environment.set(\"key\", \"value\")",
        "pm.set(\"key\", \"value\")",
        "pm.global(\"key\", \"value\")"
      ],
      "answer": 0
    },
    {
      "question": "Что такое environment в Postman?",
      "options": [
        "Набор API-запросов",
        "Набор переменных для разных сред (dev, prod и т.д.)",
        "Стиль оформления UI",
        "База данных"
      ],
      "answer": 1
    },
    {
      "question": "Что делает кнопка 'Send' в Postman?",
      "options": [
        "Сохраняет запрос",
        "Удаляет запрос",
        "Отправляет HTTP-запрос",
        "Останавливает выполнение теста"
      ],
      "answer": 2
    },
    {
      "question": "Можно ли в Postman указать параметры запроса в URL?",
      "options": [
        "Нет, это запрещено",
        "Да, но только с помощью коллекций",
        "Да, через строку запроса (?key=value)",
        "Да, но только в теле запроса"
      ],
      "answer": 2
    },
    {
      "question": "Какой формат используется для написания скриптов в Tests и Pre-request Script?",
      "options": ["Python", "JavaScript", "JSON", "TypeScript"],
      "answer": 1
    },
    {
      "question": "Что такое collection runner в Postman?",
      "options": [
        "Средство запуска коллекций запросов с параметрами и тестами",
        "Инструмент для форматирования тела запроса",
        "Плагин для интеграции с Jenkins",
        "Функция автоматического обновления Postman"
      ],
      "answer": 0
    },
    {
      "question": "Как проверить значение заголовка ответа в Postman-тесте?",
      "options": [
        "pm.response.headers.has(\"Content-Type\")",
        "pm.headers.includes(\"Content-Type\")",
        "headers.get(\"Content-Type\")",
        "pm.test(\"\", function () { response.header(\"...\") })"
      ],
      "answer": 0
    },
    {
      "question": "Можно ли в Postman импортировать API из Swagger/OpenAPI?",
      "options": ["Нет", "Да, через Import → Link/File", "Только через Postman CLI", "Только в Pro-версии"],
      "answer": 1
    }
  ]
},
{
  "title": "Postman — Тест 3",
  "topic": "Postman",
  "questions": [
    {
      "question": "Какой тип данных можно выбрать в Body при отправке файла?",
      "options": ["raw", "binary", "form-data", "text"],
      "answer": 2
    },
    {
      "question": "Что такое monitor в Postman?",
      "options": [
        "Инструмент для отладки кода",
        "Расширение для браузера",
        "Функция автоматического запуска запросов по расписанию",
        "Проверка синтаксиса JSON"
      ],
      "answer": 2
    },
    {
      "question": "Как в Postman указать значение переменной в URL?",
      "options": [
        "{variable}",
        "{{variable}}",
        "[[variable]]",
        "<variable>"
      ],
      "answer": 1
    },
    {
      "question": "Где в Postman можно задать значение переменных окружения вручную?",
      "options": [
        "В Body запроса",
        "В Headers",
        "Внизу интерфейса через Environment quick look",
        "Во вкладке Tests"
      ],
      "answer": 2
    },
    {
      "question": "Что делает команда `pm.variables.get(\"token\")`?",
      "options": [
        "Устанавливает значение переменной",
        "Получает значение глобальной переменной",
        "Получает значение из текущего окружения или глобальной области",
        "Удаляет переменную"
      ],
      "answer": 2
    },
    {
      "question": "Как можно отфильтровать только запросы с ошибками в Runner?",
      "options": [
        "Нажать на вкладку Errors",
        "Включить фильтр по статусу ответа",
        "Включить опцию 'Stop on error'",
        "Невозможно отфильтровать"
      ],
      "answer": 1
    },
    {
      "question": "Какой код ответа означает успешный PUT-запрос, при котором объект был создан?",
      "options": ["200", "204", "201", "400"],
      "answer": 2
    },
    {
      "question": "Что делает кнопка 'Save Response' в Postman?",
      "options": [
        "Сохраняет тело запроса",
        "Сохраняет полученный ответ в файл или коллекцию",
        "Перезапускает запрос",
        "Кэширует заголовки ответа"
      ],
      "answer": 1
    },
    {
      "question": "Можно ли использовать переменные в теле запроса (raw)?",
      "options": ["Нет", "Да, но только в x-www-form-urlencoded", "Да, с помощью {{}}", "Только при POST-запросах"],
      "answer": 2
    },
    {
      "question": "Как экспортировать коллекцию из Postman?",
      "options": [
        "Нажать Export в меню коллекции",
        "Нажать Download в Runner",
        "Открыть вкладку Import",
        "Скопировать вручную JSON из Console"
      ],
      "answer": 0
    }
  ]
},
{
  "title": "Charles Proxy — Тест 1",
  "topic": "Charles Proxy",
  "questions": [
    {
      "question": "Для чего используется Charles Proxy?",
      "options": [
        "Создание веб-сайтов",
        "Тестирование интерфейса",
        "Просмотр и анализ сетевого трафика",
        "Запуск автотестов"
      ],
      "answer": 2
    },
    {
      "question": "Какой протокол Charles может перехватывать и расшифровывать при правильной настройке?",
      "options": ["HTTP", "HTTPS", "FTP", "SSH"],
      "answer": 1
    },
    {
      "question": "Что необходимо установить для просмотра HTTPS-трафика в Charles?",
      "options": [
        "Расширение для браузера",
        "VPN-сервис",
        "Сертификат Charles",
        "Фаервол"
      ],
      "answer": 2
    },
    {
      "question": "Как называется функция Charles, позволяющая изменить запрос до его отправки?",
      "options": ["Map Remote", "Throttle", "Breakpoint", "Rewrite"],
      "answer": 2
    },
    {
      "question": "Что делает функция Throttle?",
      "options": [
        "Фильтрует запросы",
        "Ограничивает скорость соединения",
        "Удаляет куки",
        "Перезапускает сервер"
      ],
      "answer": 1
    },
    {
      "question": "Можно ли с помощью Charles увидеть запросы от мобильного устройства?",
      "options": ["Нет", "Да, если подключить его к одной сети и настроить прокси", "Только через эмулятор", "Только через Wi-Fi роутер"],
      "answer": 1
    },
    {
      "question": "Как включить или выключить захват трафика в Charles?",
      "options": ["Кнопкой Record/Stop", "Вкладкой Tools", "Через настройки SSL", "Это происходит автоматически"],
      "answer": 0
    },
    {
      "question": "Как сохранить сетевой лог в Charles?",
      "options": [
        "Через кнопку Save или File > Save Session",
        "Нельзя сохранять",
        "Только через консоль",
        "Комбинацией клавиш Ctrl + S"
      ],
      "answer": 0
    },
    {
      "question": "Что показывает вкладка Structure в Charles?",
      "options": [
        "Тело ответа",
        "Дерево запросов по доменам",
        "Список ошибок",
        "Параметры прокси"
      ],
      "answer": 1
    },
    {
      "question": "Какая вкладка показывает сырой запрос и ответ?",
      "options": ["Overview", "Contents", "Raw", "Headers"],
      "answer": 2
    }
  ]
},
{
  "title": "Charles Proxy — Тест 2",
  "topic": "Charles Proxy",
  "questions": [
    {
      "question": "Для чего используется функция Map Local в Charles Proxy?",
      "options": [
        "Для отправки запросов на локальный сервер",
        "Для замены ответа сервера на локальный файл",
        "Для изменения URL перед отправкой",
        "Для блокировки запросов"
      ],
      "answer": 1
    },
    {
      "question": "Какой файл можно использовать в Map Local?",
      "options": ["HTML", "JSON", "CSS", "Все вышеперечисленное"],
      "answer": 3
    },
    {
      "question": "Что делает функция Breakpoints в Charles?",
      "options": [
        "Позволяет редактировать запрос до его отправки или ответ до получения",
        "Проверяет правильность сертификатов",
        "Ускоряет выполнение запросов",
        "Отображает ошибки в сети"
      ],
      "answer": 0
    },
    {
      "question": "Можно ли с помощью Breakpoints в Charles изменить тело запроса?",
      "options": ["Нет", "Да, перед отправкой", "Да, после ответа", "Только в HTTPS-трафике"],
      "answer": 1
    },
    {
      "question": "Для чего используется Map Remote?",
      "options": [
        "Для перенаправления запроса на другой удалённый адрес",
        "Для сохранения логов",
        "Для анализа запросов с мобильных устройств",
        "Для создания виртуального сервера"
      ],
      "answer": 0
    },
    {
      "question": "Какую цель выполняет функция Rewrite?",
      "options": [
        "Автоматическое изменение запросов и/или ответов по заданным правилам",
        "Удаление cookies",
        "Шифрование HTTPS-трафика",
        "Замена IP-адресов в запросах"
      ],
      "answer": 0
    },
    {
      "question": "Можно ли с помощью Rewrite изменить заголовок запроса?",
      "options": ["Нет", "Да, с помощью правила Header Rewrite", "Только в режиме отладки", "Только в платной версии"],
      "answer": 1
    },
    {
      "question": "Как активировать режим Breakpoints в Charles?",
      "options": [
        "Menu → Tools → Breakpoints",
        "Правый клик по запросу → Enable Breakpoint",
        "Кнопка Breakpoints в панели инструментов",
        "Любой из вышеперечисленных способов"
      ],
      "answer": 3
    },
    {
      "question": "Можно ли задать условие, при котором сработает Rewrite?",
      "options": ["Да, по URL, методу, заголовкам и другим параметрам", "Нет, оно применяется ко всем запросам", "Только по IP", "Только в Debug Mode"],
      "answer": 0
    },
    {
      "question": "Что произойдет, если в Map Remote указать несуществующий URL?",
      "options": [
        "Запрос будет проигнорирован",
        "Запрос упадет с ошибкой подключения",
        "Charles отправит стандартный ответ",
        "Запрос будет обработан локально"
      ],
      "answer": 1
    }
  ]
},
{
  "title": "Клиент-серверная архитектура — Тест 1",
  "topic": "Клиент-серверная архитектура",
  "questions": [
    {
      "question": "Что такое клиент в клиент-серверной архитектуре?",
      "options": [
        "Центральный сервер базы данных",
        "Устройство или приложение, отправляющее запрос",
        "Программа для администрирования",
        "Сервер, обрабатывающий данные"
      ],
      "answer": 1
    },
    {
      "question": "Что такое сервер в клиент-серверной архитектуре?",
      "options": [
        "Устройство пользователя",
        "Программа, получающая и обрабатывающая запросы от клиента",
        "Операционная система",
        "Сеть, соединяющая компьютеры"
      ],
      "answer": 1
    },
    {
      "question": "Какой из следующих примеров относится к клиенту?",
      "options": ["Веб-браузер", "СУБД", "HTTP-протокол", "DNS-сервер"],
      "answer": 0
    },
    {
      "question": "Что означает запрос от клиента к серверу?",
      "options": [
        "Клиент получает данные",
        "Клиент инициирует соединение и передает данные",
        "Сервер запрашивает информацию",
        "Сервер завершает соединение"
      ],
      "answer": 1
    },
    {
      "question": "Что отвечает на запрос клиента?",
      "options": ["Браузер", "Сеть", "Сервер", "Брандмауэр"],
      "answer": 2
    },
    {
      "question": "Какой протокол чаще всего используется для общения клиента и сервера в вебе?",
      "options": ["FTP", "SMTP", "HTTP/HTTPS", "SSH"],
      "answer": 2
    },
    {
      "question": "Что такое IP-адрес в контексте клиент-серверной архитектуры?",
      "options": [
        "Название сервера",
        "Идентификатор пакета данных",
        "Уникальный адрес устройства в сети",
        "Тип подключения"
      ],
      "answer": 2
    },
    {
      "question": "Что такое порт?",
      "options": [
        "Номер запроса",
        "Скорость соединения",
        "Протокол безопасности",
        "Точка доступа к определённой службе на сервере"
      ],
      "answer": 3
    },
    {
      "question": "Как называется модель, в которой клиент и сервер могут одновременно выполнять задачи?",
      "options": ["Синхронная", "Асинхронная", "Монотонная", "Прямая"],
      "answer": 1
    },
    {
      "question": "Какой компонент отвечает за маршрутизацию запросов от клиента к нужному серверу?",
      "options": ["Браузер", "Маршрутизатор", "Клиент", "Хост"],
      "answer": 1
    }
  ]
},
{
  "title": "Клиент-серверная архитектура — Тест 2",
  "topic": "Клиент-серверная архитектура",
  "questions": [
    {
      "question": "Какой компонент отвечает за распределение нагрузки между несколькими серверами?",
      "options": ["Маршрутизатор", "Клиент", "Балансировщик нагрузки (load balancer)", "DNS-сервер"],
      "answer": 2
    },
    {
      "question": "Что происходит при установлении TCP-соединения между клиентом и сервером?",
      "options": [
        "Происходит отправка GET-запроса",
        "Создается защищённый канал связи",
        "Устанавливается трёхэтапное рукопожатие (handshake)",
        "Открывается порт в браузере"
      ],
      "answer": 2
    },
    {
      "question": "Какую роль играет DNS-сервер в клиент-серверной архитектуре?",
      "options": [
        "Передаёт файлы между клиентом и сервером",
        "Шифрует данные для безопасности",
        "Преобразует доменное имя в IP-адрес",
        "Осуществляет кэширование запросов"
      ],
      "answer": 2
    },
    {
      "question": "Что из ниже перечисленного относится к клиентским технологиям?",
      "options": ["HTML, CSS, JavaScript", "PostgreSQL", "Nginx", "Apache Tomcat"],
      "answer": 0
    },
    {
      "question": "Что означает понятие «стейтлесс» в клиент-серверной модели?",
      "options": [
        "Сервер отслеживает все состояния клиента",
        "Каждый запрос независим и не зависит от предыдущих",
        "Клиент обязан хранить все данные",
        "Сервер должен сохранять все ответы"
      ],
      "answer": 1
    },
    {
      "question": "Какая из моделей связи чаще всего используется в REST API?",
      "options": ["P2P", "Клиент-сервер", "Микросервисная", "Монолитная"],
      "answer": 1
    },
    {
      "question": "Зачем клиенту нужен порт при обращении к серверу?",
      "options": [
        "Для выбора протокола передачи",
        "Для указания версии приложения",
        "Для адресации запроса нужному приложению на сервере",
        "Для установки соединения с DNS"
      ],
      "answer": 2
    },
    {
      "question": "Как называется модель, в которой один сервер обслуживает множество клиентов?",
      "options": ["Одноранговая", "Клиент-серверная", "Масштабируемая", "Монолитная"],
      "answer": 1
    },
    {
      "question": "Что из этого является примером серверного ПО?",
      "options": ["React", "Nginx", "Figma", "Chrome"],
      "answer": 1
    },
    {
      "question": "Что происходит, если клиент отправляет запрос на несуществующий порт?",
      "options": [
        "Сервер отвечает стандартным ответом",
        "Клиент получает ошибку соединения",
        "Запрос обрабатывается автоматически",
        "Порт создаётся динамически"
      ],
      "answer": 1
    }
  ]
},
{
  "title": "Клиент-серверная архитектура — Тест 3",
  "topic": "Клиент-серверная архитектура",
  "questions": [
    {
      "question": "Что произойдёт, если клиент делает запрос, но сервер не отвечает?",
      "options": [
        "Клиент автоматически повторит запрос",
        "Произойдёт тайм-аут соединения",
        "Сервер завершит сессию",
        "Запрос перенаправится на другой сервер"
      ],
      "answer": 1
    },
    {
      "question": "Какой тип IP-адреса чаще используется в локальной сети?",
      "options": ["Публичный IP", "Статический IP", "Приватный IP", "Динамический DNS"],
      "answer": 2
    },
    {
      "question": "Что означает термин 'серверная нагрузка'?",
      "options": [
        "Количество клиентов, подключённых к серверу",
        "Объём сетевого трафика",
        "Объём ресурсов, используемых сервером для обработки запросов",
        "Количество портов на сервере"
      ],
      "answer": 2
    },
    {
      "question": "Какая роль у API в клиент-серверной архитектуре?",
      "options": [
        "Связывает клиента с DNS",
        "Определяет способ взаимодействия клиента и сервера",
        "Сохраняет пользовательские данные",
        "Заменяет клиент"
      ],
      "answer": 1
    },
    {
      "question": "Почему важно кэширование на стороне клиента?",
      "options": [
        "Для увеличения безопасности",
        "Для уменьшения нагрузки на сервер и ускорения отклика",
        "Для предотвращения потери данных",
        "Для шифрования соединения"
      ],
      "answer": 1
    },
    {
      "question": "Что такое CDN в контексте клиент-серверной архитектуры?",
      "options": [
        "Сервер баз данных",
        "Промежуточный кеширующий сервер для ускорения доставки контента",
        "Технология защиты сервера от атак",
        "Клиентское расширение браузера"
      ],
      "answer": 1
    },
    {
      "question": "Какая из этих технологий используется для постоянной связи между клиентом и сервером?",
      "options": ["HTTP", "WebSocket", "FTP", "DNS"],
      "answer": 1
    },
    {
      "question": "Какой элемент обеспечивает шифрование данных между клиентом и сервером?",
      "options": ["IP-адрес", "DNS", "SSL/TLS", "HTML"],
      "answer": 2
    },
    {
      "question": "Что такое обратный прокси (reverse proxy)?",
      "options": [
        "Сервер, перенаправляющий запросы от клиента на другие серверы",
        "Клиент, обращающийся к нескольким серверам",
        "Устройство маршрутизации в локальной сети",
        "Служба, генерирующая случайные IP-адреса"
      ],
      "answer": 0
    },
    {
      "question": "Какую задачу выполняет кеш браузера в клиент-серверной архитектуре?",
      "options": [
        "Сохраняет данные о сессиях",
        "Сохраняет пароли",
        "Сохраняет часто используемые ресурсы для ускорения загрузки",
        "Контролирует авторизацию пользователя"
      ],
      "answer": 2
    }
  ]
},
{
  "title": "Виды тестирования — Тест 1",
  "topic": "Виды тестирования",
  "questions": [
    {
      "question": "Какой вид тестирования проверяет весь продукт как единое целое?",
      "options": ["Модульное", "Интеграционное", "Системное", "Приёмочное"],
      "answer": 2
    },
    {
      "question": "Что такое регрессионное тестирование?",
      "options": [
        "Тестирование нового функционала",
        "Проверка совместимости с разными устройствами",
        "Убедиться, что изменения не повлияли на существующий функционал",
        "Тестирование только пользовательского интерфейса"
      ],
      "answer": 2
    },
    {
      "question": "Какой вид тестирования выполняется пользователями или заказчиками?",
      "options": ["Юнит-тестирование", "Системное тестирование", "Приёмочное тестирование", "Интеграционное тестирование"],
      "answer": 2
    },
    {
      "question": "Что такое smoke-тестирование (дымовое)?",
      "options": [
        "Полное тестирование функциональности",
        "Минимальная проверка на работоспособность продукта",
        "Нагрузочное тестирование",
        "Тестирование безопасности"
      ],
      "answer": 1
    },
    {
      "question": "Какой вид тестирования проверяет взаимодействие между модулями?",
      "options": ["Модульное", "Интеграционное", "Системное", "Регрессионное"],
      "answer": 1
    },
    {
      "question": "Какая цель exploratory-тестирования?",
      "options": [
        "Следовать заранее написанным тест-кейсам",
        "Анализировать нагрузку",
        "Исследовать продукт без заранее определённого сценария",
        "Автоматизировать тесты"
      ],
      "answer": 2
    },
    {
      "question": "Когда обычно проводится приёмочное тестирование?",
      "options": [
        "После написания требований",
        "После юнит-тестов",
        "Перед передачей продукта заказчику",
        "После релиза"
      ],
      "answer": 2
    },
    {
      "question": "Что из этого является нефункциональным тестированием?",
      "options": ["Регрессионное", "Системное", "Нагрузочное", "Интеграционное"],
      "answer": 2
    },
    {
      "question": "Что проверяет тестирование совместимости?",
      "options": [
        "Производительность",
        "Работу продукта в разных условиях (браузеры, ОС, устройства)",
        "Работу API",
        "Ошибки интерфейса"
      ],
      "answer": 1
    },
    {
      "question": "Какой вид тестирования помогает определить, выдержит ли система высокую нагрузку?",
      "options": ["Интеграционное", "Юнит-тестирование", "Нагрузочное", "Смоук-тестирование"],
      "answer": 2
    }
  ]
},
{
  "title": "Виды тестирования — Тест 2",
  "topic": "Виды тестирования",
  "questions": [
    {
      "question": "Что такое юнит-тестирование?",
      "options": [
        "Тестирование всей системы как единого целого",
        "Тестирование отдельных функций или методов в изоляции",
        "Тестирование взаимодействия между модулями",
        "Тестирование пользовательского интерфейса"
      ],
      "answer": 1
    },
    {
      "question": "Какой вид тестирования проводят для оценки работы системы под длительной нагрузкой?",
      "options": ["Регрессионное", "Нагрузочное", "Долговременное (Soak)", "Интеграционное"],
      "answer": 2
    },
    {
      "question": "Какой тип тестирования оценивает защищенность приложения?",
      "options": ["Смоук-тестирование", "Функциональное", "Безопасности (Security)", "Приёмочное"],
      "answer": 2
    },
    {
      "question": "Когда выполняется smoke-тестирование?",
      "options": [
        "На ранней стадии проекта",
        "После сборки, чтобы убедиться, что система запускается",
        "Только после релиза",
        "При тестировании интерфейса"
      ],
      "answer": 1
    },
    {
      "question": "Что из этого является примером нефункционального тестирования?",
      "options": ["Юнит-тестирование", "Интеграционное", "Тестирование производительности", "Регрессионное"],
      "answer": 2
    },
    {
      "question": "Какой вид тестирования позволяет проверить совместимость продукта с разными браузерами и устройствами?",
      "options": ["Регрессионное", "Совместимости (Compatibility)", "Интеграционное", "Системное"],
      "answer": 1
    },
    {
      "question": "Что такое альфа-тестирование?",
      "options": [
        "Тестирование в продакшене",
        "Внутреннее тестирование командой разработчиков или тестировщиков",
        "Тестирование пользователями в реальной среде",
        "Нагрузочное тестирование"
      ],
      "answer": 1
    },
    {
      "question": "Какой тип тестирования следует проводить, чтобы убедиться, что изменения не нарушили существующую функциональность?",
      "options": ["Регрессионное", "Юнит", "Нагрузочное", "Системное"],
      "answer": 0
    },
    {
      "question": "Что означает exploratory-тестирование?",
      "options": [
        "Чёткое следование заранее написанным тест-кейсам",
        "Автоматическая генерация данных",
        "Параллельное обучение и тестирование системы без заранее заданных сценариев",
        "Тестирование только UI"
      ],
      "answer": 2
    },
    {
      "question": "Что такое бета-тестирование?",
      "options": [
        "Тестирование системы пользователями вне команды разработчиков",
        "Первичная проверка требований",
        "Тестирование на уровне базы данных",
        "Внутреннее тестирование программистами"
      ],
      "answer": 0
    }
  ]
},
{
  "title": "Виды тестирования — Тест 3",
  "topic": "Виды тестирования",
  "questions": [
    {
      "question": "Что такое интеграционное тестирование?",
      "options": [
        "Проверка отдельных компонентов системы",
        "Проверка работы системы под нагрузкой",
        "Тестирование взаимодействия между модулями",
        "Тестирование UI"
      ],
      "answer": 2
    },
    {
      "question": "Цель приёмочного тестирования — это:",
      "options": [
        "Найти баги в коде",
        "Проверить внешний вид интерфейса",
        "Убедиться, что система соответствует требованиям заказчика",
        "Оценить производительность сервера"
      ],
      "answer": 2
    },
    {
      "question": "Что такое тестирование восстановления после сбоя (recovery testing)?",
      "options": [
        "Тестирование функций восстановления пароля",
        "Проверка, как система восстанавливается после отказа",
        "Проверка резервных копий",
        "Ретест после фикса багов"
      ],
      "answer": 1
    },
    {
      "question": "Что включает в себя тестирование доступности (usability testing)?",
      "options": [
        "Оценку времени отклика сервера",
        "Тестирование, насколько удобно и понятно пользователю работать с интерфейсом",
        "Проверку работы в разных браузерах",
        "Анализ логов"
      ],
      "answer": 1
    },
    {
      "question": "Когда проводят регрессионное тестирование?",
      "options": [
        "Перед началом разработки",
        "Только при релизе",
        "После каждого изменения в коде, чтобы убедиться, что старый функционал не сломан",
        "Только вручную"
      ],
      "answer": 2
    },
    {
      "question": "Что такое стресс-тестирование?",
      "options": [
        "Проверка безопасности",
        "Проверка поведения системы в экстремальных условиях нагрузки",
        "Тестирование UI под давлением",
        "Проверка корректности кода"
      ],
      "answer": 1
    },
    {
      "question": "Какой вид тестирования используется для проверки корректности миграции данных?",
      "options": ["Функциональное", "Интеграционное", "Миграционное", "UI-тестирование"],
      "answer": 2
    },
    {
      "question": "Что такое тестирование из коробки (out-of-the-box testing)?",
      "options": [
        "Тестирование сразу после установки без дополнительной настройки",
        "Тестирование физической упаковки продукта",
        "Юнит-тестирование",
        "Смоук-тестирование"
      ],
      "answer": 0
    },
    {
      "question": "Что проверяет тестирование локализации (L10n)?",
      "options": [
        "Производительность сервера",
        "Наличие ошибок в коде",
        "Корректность перевода и адаптацию интерфейса под язык и культуру",
        "Безопасность авторизации"
      ],
      "answer": 2
    },
    {
      "question": "Что такое конфигурационное тестирование?",
      "options": [
        "Проверка возможности восстановления после сбоя",
        "Тестирование продукта в различных конфигурациях (ОС, браузеры, разрешения экрана и т.п.)",
        "Тестирование кода конфигурационных файлов",
        "Проверка прав доступа"
      ],
      "answer": 1
    }
  ]
},
{
  "title": "Техники тест-дизайна — Тест 1",
  "topic": "Техники тест-дизайна",
  "questions": [
    {
      "question": "Что такое эквивалентное разбиение?",
      "options": [
        "Проверка всех возможных значений",
        "Тестирование на основе бизнес-логики",
        "Разделение входных данных на группы, которые обрабатываются одинаково",
        "Создание тестов без документации"
      ],
      "answer": 2
    },
    {
      "question": "Для чего используется анализ граничных значений?",
      "options": [
        "Для проверки UI",
        "Для выявления ошибок на границах допустимых значений",
        "Для проверки безопасности",
        "Для проверки скорости загрузки"
      ],
      "answer": 1
    },
    {
      "question": "Что такое таблица принятия решений?",
      "options": [
        "Документ для управления задачами",
        "Таблица, описывающая разные комбинации условий и соответствующие действия",
        "Диаграмма бизнес-процесса",
        "Форма отчета по багам"
      ],
      "answer": 1
    },
    {
      "question": "Что означает метод 'состояний и переходов'?",
      "options": [
        "Переход от одной роли к другой",
        "Проверка навигации по сайту",
        "Тестирование различных состояний системы и переходов между ними",
        "Анализ ошибок при переходах между средами"
      ],
      "answer": 2
    },
    {
      "question": "Чем полезна техника попарного тестирования (pairwise)?",
      "options": [
        "Позволяет протестировать каждую комбинацию всех параметров",
        "Позволяет протестировать все пары значений параметров, снижая общее количество тестов",
        "Применяется для тестирования безопасности",
        "Используется только в автоматизации"
      ],
      "answer": 1
    },
    {
      "question": "Какой метод поможет определить, какие тесты нужны, если система зависит от порядка шагов?",
      "options": ["Граничные значения", "Попарное тестирование", "Диаграмма состояний", "Тестирование по чек-листу"],
      "answer": 2
    },
    {
      "question": "Что такое позитивное тестирование?",
      "options": [
        "Проверка того, как система ведёт себя при некорректных данных",
        "Проверка, что система работает при правильных входных данных",
        "Проверка UI-стилей",
        "Создание тест-кейсов вручную"
      ],
      "answer": 1
    },
    {
      "question": "Что такое негативное тестирование?",
      "options": [
        "Проверка сценариев, при которых система должна обрабатывать ошибки",
        "Проверка документации",
        "Проверка только бизнес-логики",
        "Тестирование внешнего вида"
      ],
      "answer": 0
    },
    {
      "question": "Какая техника подходит для тестирования условий с множеством вариантов 'если/иначе'?",
      "options": ["Эквивалентное разбиение", "Анализ граничных значений", "Таблица принятия решений", "Попарное тестирование"],
      "answer": 2
    },
    {
      "question": "Что важно при использовании техник тест-дизайна?",
      "options": [
        "Чистота кода",
        "Понимание бизнес-требований и логики работы системы",
        "Уровень покрытия автотестами",
        "Платформа тестирования"
      ],
      "answer": 1
    }
  ]
},
{
  "title": "Техники тест-дизайна — Тест 2",
  "topic": "Техники тест-дизайна",
  "questions": [
    {
      "question": "Что из этого относится к динамическим техникам тест-дизайна?",
      "options": [
        "Анализ требований",
        "Анализ кода",
        "Тестирование на основе поведения системы при выполнении",
        "Проверка архитектуры"
      ],
      "answer": 2
    },
    {
      "question": "Что такое техника 'классификация эквивалентностей'?",
      "options": [
        "Метод декомпозиции требований",
        "Разделение входных значений на классы с одинаковым поведением",
        "Группировка багов",
        "Оценка рисков перед тестированием"
      ],
      "answer": 1
    },
    {
      "question": "Какую цель преследует тестирование по диаграмме состояний?",
      "options": [
        "Проверить корректность данных в таблицах",
        "Оценить эффективность UI",
        "Проверить корректность переходов между состояниями системы",
        "Сравнить производительность между версиями"
      ],
      "answer": 2
    },
    {
      "question": "Что обозначает 'исчерпывающее тестирование'?",
      "options": [
        "Тестирование каждой комбинации входных данных",
        "Тестирование всех граничных значений",
        "Автоматическое тестирование всех багов",
        "Ручное тестирование без тест-кейсов"
      ],
      "answer": 0
    },
    {
      "question": "Что такое ошибка покрытия при тест-дизайне?",
      "options": [
        "Проверка кода на утечки памяти",
        "Ситуация, когда часть функционала не покрыта тестами",
        "Ошибки в API",
        "Проблемы при тестировании интерфейса"
      ],
      "answer": 1
    },
    {
      "question": "Когда целесообразно использовать попарное тестирование?",
      "options": [
        "При большом количестве параметров с множеством значений",
        "При тестировании UI",
        "Только при автоматизации",
        "Для тестирования безопасности"
      ],
      "answer": 0
    },
    {
      "question": "Какая техника помогает минимизировать количество тестов, сохраняя при этом высокое покрытие условий?",
      "options": [
        "Граничные значения",
        "Попарное тестирование",
        "Исчерпывающее тестирование",
        "Smoke-тестирование"
      ],
      "answer": 1
    },
    {
      "question": "Что характеризует негативные тест-кейсы?",
      "options": [
        "Проверка на успех операций",
        "Проверка сценариев, где система должна корректно обработать ошибку",
        "Тестирование только интерфейса",
        "Создание тестов на основе документации"
      ],
      "answer": 1
    },
    {
      "question": "В чем суть техники 'тестирование по таблице переходов'?",
      "options": [
        "Построение чек-листов",
        "Формирование сценариев на основе условий и действий",
        "Анализ документации",
        "Генерация всех возможных данных"
      ],
      "answer": 1
    },
    {
      "question": "Что важно учитывать при выборе техники тест-дизайна?",
      "options": [
        "Стиль программирования",
        "Уровень квалификации разработчиков",
        "Тип и особенности тестируемой системы",
        "Дизайн интерфейса"
      ],
      "answer": 2
    }
  ]
},
{
  "title": "Техники тест-дизайна — Тест 3",
  "topic": "Техники тест-дизайна",
  "questions": [
    {
      "question": "Что такое логическое покрытие условий (condition coverage)?",
      "options": [
        "Проверка всех возможных значений одного поля",
        "Проверка всех комбинаций логических выражений в условии",
        "Проверка только граничных значений",
        "Проверка всех строк кода"
      ],
      "answer": 1
    },
    {
      "question": "Какой подход используется в тестировании по состояниям?",
      "options": [
        "Выборка значений из базы данных",
        "Сценарии переходов между состояниями системы",
        "Сравнение ожидаемого и фактического результата",
        "Анализ пользовательского интерфейса"
      ],
      "answer": 1
    },
    {
      "question": "Когда особенно полезна таблица принятия решений?",
      "options": [
        "Когда нужно протестировать поведение при разных условиях и комбинациях",
        "Когда проверяем UI",
        "Когда делаем смоук-тест",
        "Когда тестируем производительность"
      ],
      "answer": 0
    },
    {
      "question": "Какая из техник особенно подходит для валидации числовых диапазонов?",
      "options": [
        "Попарное тестирование",
        "Диаграмма переходов",
        "Анализ граничных значений",
        "Негативное тестирование"
      ],
      "answer": 2
    },
    {
      "question": "Что из перечисленного является преимуществом техник тест-дизайна?",
      "options": [
        "Снижение покрытия",
        "Повышение стоимости тестирования",
        "Оптимизация количества тестов без потери качества",
        "Усложнение документации"
      ],
      "answer": 2
    },
    {
      "question": "Какая техника поможет протестировать поведение системы при последовательности действий?",
      "options": [
        "Таблица решений",
        "Диаграмма состояний и переходов",
        "Эквивалентное разбиение",
        "Граничные значения"
      ],
      "answer": 1
    },
    {
      "question": "Какую технику можно использовать без документации, просто исследуя продукт?",
      "options": [
        "Эквивалентное разбиение",
        "Тестирование состояний",
        "Исследовательское тестирование",
        "Попарное тестирование"
      ],
      "answer": 2
    },
    {
      "question": "Что такое тест-оригинальность в контексте тест-дизайна?",
      "options": [
        "Использование уникального фреймворка",
        "Создание тестов, которых ещё не было",
        "Способность выявлять нестандартные баги с помощью нетипичных сценариев",
        "Проверка исключительно негативных кейсов"
      ],
      "answer": 2
    },
    {
      "question": "Когда используют позитивные тесты?",
      "options": [
        "Для проверки реакций на некорректные данные",
        "Для проверки стандартных корректных сценариев",
        "Для проверки производительности",
        "При отсутствии спецификации"
      ],
      "answer": 1
    },
    {
      "question": "Что отличает эквивалентное разбиение от анализа граничных значений?",
      "options": [
        "Разбиение работает с временными значениями, границы — с датами",
        "Границы тестируют крайние случаи, а разбиение — типичные",
        "Разбиение применяется только в API",
        "Границы — это подмножество разбиения"
      ],
      "answer": 1
    }
  ]
},
{
  "title": "Тест-документация — Тест 1",
  "topic": "Тест-документация",
  "questions": [
    {
      "question": "Что такое баг-репорт?",
      "options": [
        "Тест-кейс на новую фичу",
        "Документ, описывающий найденную ошибку в продукте",
        "Финальный отчёт по проекту",
        "Список исправленных ошибок"
      ],
      "answer": 1
    },
    {
      "question": "Какие обязательные поля обычно содержит баг-репорт?",
      "options": [
        "Название бага, автор, стоимость",
        "Описание, шаги воспроизведения, ожидаемый и фактический результат",
        "ID задачи, дата релиза, имя разработчика",
        "Список тестов, отчёт о нагрузке, лог"
      ],
      "answer": 1
    },
    {
      "question": "Что такое тест-кейс?",
      "options": [
        "Набор всех найденных багов",
        "Документ, описывающий шаги и ожидаемый результат для проверки функции",
        "Сценарий релиза продукта",
        "Результат ручного тестирования"
      ],
      "answer": 1
    },
    {
      "question": "Для чего нужен чек-лист в тестировании?",
      "options": [
        "Для оценки производительности команды",
        "Для списания часов",
        "Для быстрой проверки без детальной детализации шагов",
        "Для планирования проекта"
      ],
      "answer": 2
    },
    {
      "question": "Что включает в себя тест-план?",
      "options": [
        "Только список тест-кейсов",
        "Баги и отчёты о нагрузке",
        "Цели, объём, стратегия тестирования, риски и расписание",
        "Код автотестов"
      ],
      "answer": 2
    },
    {
      "question": "Что такое Expected Result в тест-кейсе?",
      "options": [
        "Текст, поясняющий баг",
        "Результат, который мы ожидаем при выполнении шага",
        "Ошибочное поведение",
        "Входные данные теста"
      ],
      "answer": 1
    },
    {
      "question": "Когда создаётся тестовая документация?",
      "options": [
        "После окончания тестирования",
        "В процессе проектирования и подготовки к тестированию",
        "Только в случае релиза",
        "Когда заказчик попросит"
      ],
      "answer": 1
    },
    {
      "question": "Что обычно НЕ входит в баг-репорт?",
      "options": [
        "Название и шаги воспроизведения",
        "Приоритет и среда",
        "Скриншот или видео при необходимости",
        "Список всех тестов, которые не прошли"
      ],
      "answer": 3
    },
    {
      "question": "В чём разница между баг-репортом и тест-кейсом?",
      "options": [
        "Нет разницы — это одно и то же",
        "Баг-репорт описывает найденную ошибку, тест-кейс — как её найти",
        "Тест-кейс содержит баг, баг-репорт — тест-кейс",
        "Баг-репорт используется только в автоматизации"
      ],
      "answer": 1
    },
    {
      "question": "Какой формат наиболее часто используется для создания баг-репортов?",
      "options": ["PDF", "CSV", "Интерфейс баг-трекинговой системы (например, Jira)", "Word-документ"],
      "answer": 2
    }
  ]
},
{
  "title": "Тест-документация — Тест 2",
  "topic": "Тест-документация",
  "questions": [
    {
      "question": "Что такое Test Suite?",
      "options": [
        "Один тест-кейс",
        "Набор связанных тестов, объединённых по логике или функциональности",
        "Набор багов",
        "Файл конфигурации тестовой среды"
      ],
      "answer": 1
    },
    {
      "question": "Кто обычно пишет баг-репорт?",
      "options": ["Проектный менеджер", "Бэкенд-разработчик", "Тестировщик", "DevOps-инженер"],
      "answer": 2
    },
    {
      "question": "Что означает статус баг-репорта 'Rejected'?",
      "options": [
        "Баг ещё не проверен",
        "Ошибка не воспроизвелась или признана некорректной",
        "Баг в очереди на фиксы",
        "Баг в процессе анализа"
      ],
      "answer": 1
    },
    {
      "question": "Какой инструмент чаще всего используют для ведения баг-репортов?",
      "options": ["Jira", "Figma", "Slack", "Confluence"],
      "answer": 0
    },
    {
      "question": "Что такое шаг воспроизведения в баг-репорте?",
      "options": [
        "Описание ошибки",
        "Список условий теста",
        "Подробная последовательность действий, ведущая к ошибке",
        "Описание технического стека"
      ],
      "answer": 2
    },
    {
      "question": "Что такое Test Result в тест-кейсе?",
      "options": [
        "Ожидаемый результат",
        "Фактический результат выполнения теста",
        "Название теста",
        "Описание среды"
      ],
      "answer": 1
    },
    {
      "question": "Какая связь между приоритетом и серьёзностью (severity) бага?",
      "options": [
        "Это одно и то же",
        "Приоритет указывает, насколько критична ошибка бизнесу, серьёзность — насколько она влияет на систему",
        "Серьёзность влияет на скорость фикса, приоритет — нет",
        "Серьёзность — это баг, приоритет — это тест"
      ],
      "answer": 1
    },
    {
      "question": "Что такое precondition в тест-кейсе?",
      "options": [
        "Ожидаемый результат",
        "Тестовая среда",
        "Условие, которое должно быть выполнено перед началом теста",
        "Причина отказа теста"
      ],
      "answer": 2
    },
    {
      "question": "Что такое 'actual result' в тест-кейсе?",
      "options": [
        "Результат, который должен быть получен",
        "Данные для запуска теста",
        "Результат, полученный при выполнении теста",
        "Состояние базы данных"
      ],
      "answer": 2
    },
    {
      "question": "Какая из задач **не относится** к тестовой документации?",
      "options": [
        "Фиксация ошибок",
        "Автоматическая сборка проекта",
        "Подготовка тест-планов",
        "Написание чек-листов"
      ],
      "answer": 1
    }
  ]
},
{
  "title": "Тест-документация — Тест 3",
  "topic": "Тест-документация",
  "questions": [
    {
      "question": "Какая цель у тест-кейса?",
      "options": [
        "Документировать баг",
        "Описать шаги, необходимые для проверки конкретной функции",
        "Планировать проект",
        "Запустить автоматизированные тесты"
      ],
      "answer": 1
    },
    {
      "question": "Что такое шаги воспроизведения в тест-кейсе?",
      "options": [
        "Код теста",
        "Описание багов",
        "Набор действий, которые необходимо выполнить, чтобы провести тест",
        "Список переменных окружения"
      ],
      "answer": 2
    },
    {
      "question": "Что означает поле 'Severity: Critical' в баг-репорте?",
      "options": [
        "Баг может быть отложен",
        "Баг не влияет на работу системы",
        "Ошибка полностью блокирует работу функционала или системы",
        "Ошибка встречается редко"
      ],
      "answer": 2
    },
    {
      "question": "Что включает в себя финальный тест-отчёт (Test Summary Report)?",
      "options": [
        "Только баги",
        "Информацию о выполненных тестах, дефектах, статусе релиза",
        "План тестирования",
        "Тест-кейсы"
      ],
      "answer": 1
    },
    {
      "question": "Что такое test run?",
      "options": [
        "Набор требований",
        "Фактическое выполнение тестов и фиксация результатов",
        "Автоматическое создание багов",
        "Создание релизной сборки"
      ],
      "answer": 1
    },
    {
      "question": "Кто чаще всего утверждает тест-план?",
      "options": ["Разработчик", "DevOps", "Бизнес-аналитик", "Тимлид/менеджер проекта"],
      "answer": 3
    },
    {
      "question": "Какая связь между тест-сценарием и тест-кейсом?",
      "options": [
        "Тест-сценарий — это набор шагов, тест-кейс — это UI-дизайн",
        "Тест-кейс — это синоним сценария",
        "Тест-сценарий может включать несколько тест-кейсов",
        "Они не связаны"
      ],
      "answer": 2
    },
    {
      "question": "Что означает статус баг-репорта 'Resolved'?",
      "options": [
        "Баг не подтверждён",
        "Баг исправлен, ожидает проверки",
        "Баг закрыт",
        "Баг отклонён"
      ],
      "answer": 1
    },
    {
      "question": "Что такое тестовое покрытие?",
      "options": [
        "Количество написанных тестов",
        "Процент кода или функциональности, покрытый тестами",
        "Количество багов на тест",
        "Время выполнения тестов"
      ],
      "answer": 1
    },
    {
      "question": "Что помогает быстрее проводить регрессионное тестирование?",
      "options": [
        "Чек-листы и приоритетные тест-кейсы",
        "Изучение багов",
        "Тест-план",
        "Только баг-репорты"
      ],
      "answer": 0
    }
  ]
},
{
  "title": "Тест-документация — Тест 4",
  "topic": "Тест-документация",
  "questions": [
    {
      "question": "Что такое traceability matrix (матрица трассируемости)?",
      "options": [
        "Форма для багов",
        "Связь требований с тестами для проверки покрытия",
        "Отчёт о тестах",
        "Форма логирования"
      ],
      "answer": 1
    },
    {
      "question": "Когда баг считается 'Closed'?",
      "options": [
        "Когда он был отклонён",
        "Когда он исправлен",
        "Когда тестировщик проверил и подтвердил, что баг больше не воспроизводится",
        "Когда баг заархивирован"
      ],
      "answer": 2
    },
    {
      "question": "Что такое 'Test Data'?",
      "options": [
        "Документация по тест-плану",
        "Набор данных, необходимых для выполнения тестов",
        "Отчёт о тестировании",
        "Описание тест-сценариев"
      ],
      "answer": 1
    },
    {
      "question": "Что делает поле 'Priority' в баг-репорте?",
      "options": [
        "Определяет серьёзность бага",
        "Указывает срочность его исправления",
        "Определяет баг как ошибку UI",
        "Присваивается только вручную"
      ],
      "answer": 1
    },
    {
      "question": "Кому адресуется баг-репорт в системе Jira?",
      "options": [
        "Всем участникам проекта",
        "Назначенному разработчику или команде",
        "Бизнес-аналитику",
        "Пользователю"
      ],
      "answer": 1
    },
    {
      "question": "Что помогает визуально представить тест-кейсы и их статусы?",
      "options": [
        "Тест-план",
        "Графики покрытия",
        "Дашборд или диаграмма в TestRail, Jira и пр.",
        "Баг-репорты"
      ],
      "answer": 2
    },
    {
      "question": "Какой формат чаще всего используется для экспорта тест-кейсов?",
      "options": ["PDF", "CSV или Excel", "HTML", "DOCX"],
      "answer": 1
    },
    {
      "question": "Что означает статус 'In Progress' у тест-кейса?",
      "options": [
        "Тест был провален",
        "Тест был создан",
        "Тест в процессе выполнения",
        "Тест удалён"
      ],
      "answer": 2
    },
    {
      "question": "Для чего используется шаблон баг-репорта?",
      "options": [
        "Для стандартизации и упрощения заполнения отчёта об ошибке",
        "Для генерации тестов",
        "Для составления тест-плана",
        "Для назначения задач"
      ],
      "answer": 0
    },
    {
      "question": "Какая документация особенно важна для тестирования по требованиям?",
      "options": [
        "Архитектурная схема",
        "Product backlog",
        "Трассировочная матрица и спецификация требований",
        "Отчёты о нагрузке"
      ],
      "answer": 2
    }
  ]
},
{
  "title": "Методологии разработки — Тест 1",
  "topic": "Методологии разработки",
  "questions": [
    {
      "question": "Какой из подходов предполагает последовательное выполнение этапов без возврата назад?",
      "options": ["Scrum", "Kanban", "Agile", "Waterfall"],
      "answer": 3
    },
    {
      "question": "Что из этого относится к Agile-манифесту?",
      "options": [
        "Подробная документация важнее взаимодействия",
        "Следование плану важнее реакции на изменения",
        "Люди и взаимодействие важнее процессов и инструментов",
        "Жёсткий контроль важнее гибкости"
      ],
      "answer": 2
    },
    {
      "question": "Какой артефакт Scrum содержит список задач продукта?",
      "options": ["Sprint backlog", "Product backlog", "Burn down chart", "Definition of Done"],
      "answer": 1
    },
    {
      "question": "Кто отвечает за максимизацию ценности продукта в Scrum?",
      "options": ["Scrum Master", "Product Owner", "Тестировщик", "Разработчик"],
      "answer": 1
    },
    {
      "question": "Как называется короткая ежедневная встреча в Scrum?",
      "options": ["Retrospective", "Planning", "Stand-up", "Review"],
      "answer": 2
    },
    {
      "question": "Что характеризует Kanban-доску?",
      "options": [
        "Фиксированные спринты",
        "Минимум документации",
        "Непрерывный поток задач и визуализация статусов",
        "Подробные требования на старте"
      ],
      "answer": 2
    },
    {
      "question": "Какой документ в Waterfall пишется до начала кодирования?",
      "options": [
        "Product backlog",
        "Отчёт о баге",
        "Полная спецификация требований",
        "Definition of Done"
      ],
      "answer": 2
    },
    {
      "question": "Что происходит на этапе Sprint Retrospective?",
      "options": [
        "Выбор задач на следующий спринт",
        "Показ готовой функциональности",
        "Анализ процесса работы команды и поиск улучшений",
        "Обновление бэклога"
      ],
      "answer": 2
    },
    {
      "question": "Что означает WIP в Kanban?",
      "options": [
        "Work in Progress — ограничение количества задач в работе",
        "Waterfall in Progress",
        "Workflow Integration Planning",
        "Working Iteration Point"
      ],
      "answer": 0
    },
    {
      "question": "Какая методология нацелена на быструю поставку инкрементов продукта?",
      "options": ["Waterfall", "Scrum", "V-Model", "RUP"],
      "answer": 1
    }
  ]
},
{
  "title": "Методологии разработки — Тест 2",
  "topic": "Методологии разработки",
  "questions": [
    {
      "question": "Что является ключевым отличием Agile от Waterfall?",
      "options": [
        "Agile исключает тестирование",
        "Waterfall поддерживает изменения на любом этапе",
        "Agile — итеративный подход с возможностью изменений в процессе",
        "Waterfall — гибкий и адаптивный подход"
      ],
      "answer": 2
    },
    {
      "question": "Какой основной принцип Kanban?",
      "options": [
        "Работа по спринтам",
        "Жёсткое планирование",
        "Ограничение количества задач в работе (WIP limit)",
        "Работа только с бэклогом"
      ],
      "answer": 2
    },
    {
      "question": "Кто из участников Scrum-команды отвечает за устранение препятствий?",
      "options": ["Scrum Master", "Product Owner", "QA", "Team Lead"],
      "answer": 0
    },
    {
      "question": "Что означает 'Definition of Done' в Scrum?",
      "options": [
        "Список невыполненных задач",
        "Описание всех требований от клиента",
        "Общее понимание команды, когда задача считается завершённой",
        "План тестирования продукта"
      ],
      "answer": 2
    },
    {
      "question": "Какой формат планирования спринта в Scrum?",
      "options": [
        "Команда работает без планов",
        "Весь год планируется заранее",
        "Команда выбирает задачи из Product Backlog на ближайшие 1-4 недели",
        "Задачи выбирает Scrum Master"
      ],
      "answer": 2
    },
    {
      "question": "Что означает 'timebox' в Scrum?",
      "options": [
        "Фиксированная длительность события или итерации",
        "Ограничение на число задач в спринте",
        "Дедлайн всего проекта",
        "Резервное время в конце спринта"
      ],
      "answer": 0
    },
    {
      "question": "В чём преимущество инкрементальной разработки?",
      "options": [
        "Можно сразу видеть результат и адаптироваться",
        "Все баги видны в конце проекта",
        "Уменьшается необходимость в общении с заказчиком",
        "Проще писать документацию"
      ],
      "answer": 0
    },
    {
      "question": "Что обычно НЕ является частью Agile-подхода?",
      "options": [
        "Гибкое реагирование на изменения",
        "Минимально необходимая документация",
        "Тестирование только в конце проекта",
        "Постоянная коммуникация в команде"
      ],
      "answer": 2
    },
    {
      "question": "К какому типу проектов особенно подходит Waterfall?",
      "options": [
        "Проекты с постоянно меняющимися требованиями",
        "Малые мобильные приложения",
        "Проекты с жёстко фиксированными требованиями и сроками",
        "Проекты без участия заказчика"
      ],
      "answer": 2
    },
    {
      "question": "Какая из методологий предполагает непрерывную поставку и улучшение без спринтов?",
      "options": ["Waterfall", "Scrum", "Kanban", "Agile V-Model"],
      "answer": 2
    }
  ]
},
{
  "title": "JSON / XML — Тест 1",
  "topic": "JSON / XML",
  "questions": [
    {
      "question": "Что означает аббревиатура JSON?",
      "options": [
        "JavaScript Object Notation",
        "Java Syntax for Object Naming",
        "Joined Server Object Network",
        "Java System Output Name"
      ],
      "answer": 0
    },
    {
      "question": "Что из этого верно для JSON?",
      "options": [
        "Данные хранятся в виде пар: ключ-значение",
        "Использует теги как HTML",
        "Не поддерживает вложенные структуры",
        "Только для текстовых данных"
      ],
      "answer": 0
    },
    {
      "question": "Какой формат более читаем человеком и используется чаще в REST API?",
      "options": ["XML", "CSV", "JSON", "YAML"],
      "answer": 2
    },
    {
      "question": "Как обозначаются данные в XML?",
      "options": [
        "Ключами и значениями в фигурных скобках",
        "Через открывающий и закрывающий теги",
        "Списками значений через запятую",
        "С помощью индексов и массивов"
      ],
      "answer": 1
    },
    {
      "question": "Что произойдёт, если в JSON нарушена структура (например, нет кавычек)?",
      "options": [
        "Пропустится ошибка",
        "Файл всё равно сработает",
        "Будет синтаксическая ошибка",
        "Преобразуется в XML"
      ],
      "answer": 2
    },
    {
      "question": "Какие типы данных поддерживает JSON?",
      "options": [
        "Только строки и числа",
        "Только массивы и объекты",
        "Строки, числа, логические значения, массивы, null, объекты",
        "Только объекты и null"
      ],
      "answer": 2
    },
    {
      "question": "Что делает парсер JSON?",
      "options": [
        "Разбивает HTML на элементы",
        "Преобразует JSON-строку в структуру объекта",
        "Удаляет теги из XML",
        "Создаёт XML на лету"
      ],
      "answer": 1
    },
    {
      "question": "Что обязательно должно быть в XML-документе?",
      "options": [
        "Только один корневой элемент",
        "Только английские символы",
        "Чётное число элементов",
        "Комментарии"
      ],
      "answer": 0
    },
    {
      "question": "Какое расширение обычно имеют JSON-файлы?",
      "options": [".js", ".json", ".txt", ".data"],
      "answer": 1
    },
    {
      "question": "Какой тип кавычек используется в JSON для ключей и строковых значений?",
      "options": ["Одинарные", "Двойные", "Любые", "Без кавычек"],
      "answer": 1
    }
  ]
},
{
  "title": "JSON / XML — Тест 2",
  "topic": "JSON / XML",
  "questions": [
    {
      "question": "Какой тип данных в JSON представляет логическое значение?",
      "options": ["'true'/'false'", "1/0", "да/нет", "bool"],
      "answer": 0
    },
    {
      "question": "Можно ли в JSON вложить массив в объект?",
      "options": ["Нет", "Да", "Только при использовании XML-конвертера", "Только в HTML"],
      "answer": 1
    },
    {
      "question": "Что из этого верно для XML?",
      "options": [
        "Не допускает вложенных элементов",
        "Поддерживает комментарии и схемы валидации",
        "Имеет фиксированную структуру",
        "Нельзя использовать атрибуты"
      ],
      "answer": 1
    },
    {
      "question": "Как обозначается массив в JSON?",
      "options": ["{}", "<>", "[]", "//"],
      "answer": 2
    },
    {
      "question": "Что произойдёт, если в XML документе будет два корневых элемента?",
      "options": [
        "XML-документ будет валиден",
        "Второй элемент игнорируется",
        "Возникнет ошибка валидации",
        "Это допустимо в HTML"
      ],
      "answer": 2
    },
    {
      "question": "Как называется схема, описывающая структуру XML-документа?",
      "options": ["XML Style Sheet", "DTD или XSD", "HTML Map", "JSON Schema"],
      "answer": 1
    },
    {
      "question": "Что такое сериализация в контексте JSON?",
      "options": [
        "Проверка структуры документа",
        "Запись объекта в формате JSON",
        "Подключение библиотеки для XML",
        "Удаление комментариев"
      ],
      "answer": 1
    },
    {
      "question": "Какое преимущество у JSON по сравнению с XML?",
      "options": [
        "Более сложный синтаксис",
        "Лучше читается человеком, занимает меньше места",
        "Только поддержка тегов",
        "Поддержка XSLT"
      ],
      "answer": 1
    },
    {
      "question": "Можно ли использовать числа с плавающей точкой в JSON?",
      "options": ["Нет", "Да", "Только целые", "Только как строки"],
      "answer": 1
    },
    {
      "question": "Как в XML задать атрибут у тега?",
      "options": [
        "<tag(attr)>",
        "<tag attr='value'>",
        "[tag: attr = value]",
        "<tag>{attr: value}</tag>"
      ],
      "answer": 1
    }
  ]
},
{
  "title": "Apache Kafka — Тест 1",
  "topic": "Kafka",
  "questions": [
    {
      "question": "Что такое Kafka?",
      "options": [
        "СУБД для хранения данных",
        "Инструмент для визуализации UI",
        "Система для обработки и передачи потоков данных в реальном времени",
        "Фреймворк для тестирования"
      ],
      "answer": 2
    },
    {
      "question": "Что такое топик (topic) в Kafka?",
      "options": [
        "Файл конфигурации",
        "Поток логов",
        "Категория или имя потока, в который отправляются и из которого читаются сообщения",
        "Название теста"
      ],
      "answer": 2
    },
    {
      "question": "Кто такие producer и consumer в Kafka?",
      "options": [
        "Producer — это пользователь, consumer — это сервер",
        "Producer создаёт топики, а consumer удаляет",
        "Producer отправляет сообщения в Kafka, consumer читает их",
        "Оба сохраняют сообщения"
      ],
      "answer": 2
    },
    {
      "question": "Что такое брокер (broker) в Kafka?",
      "options": [
        "Клиент Kafka",
        "Сервер, принимающий и обрабатывающий сообщения",
        "Программа для мониторинга",
        "Протокол передачи данных"
      ],
      "answer": 1
    },
    {
      "question": "Как называется единица данных в Kafka?",
      "options": ["Event", "Record", "Message", "Chunk"],
      "answer": 2
    },
    {
      "question": "Можно ли один топик использовать несколькими consumer-группами одновременно?",
      "options": ["Нет", "Да", "Только с настройкой через ZooKeeper", "Только при наличии нескольких брокеров"],
      "answer": 1
    },
    {
      "question": "Что такое offset в Kafka?",
      "options": [
        "Номер очереди",
        "Ключ шифрования",
        "Позиция сообщения внутри партиции",
        "Количество consumer’ов в топике"
      ],
      "answer": 2
    },
    {
      "question": "Можно ли настроить партиционирование (partitioning) в Kafka?",
      "options": [
        "Нет, это автоматически",
        "Да, вручную при создании топика или при отправке сообщений",
        "Только администратору",
        "Только на стороне consumer"
      ],
      "answer": 1
    },
    {
      "question": "Что произойдёт, если consumer упадёт, не подтвердив offset?",
      "options": [
        "Сообщение будет потеряно",
        "Kafka пересоздаст топик",
        "Consumer получит это сообщение повторно",
        "Kafka заблокирует топик"
      ],
      "answer": 2
    },
    {
      "question": "Какую роль выполняет ZooKeeper (в старых версиях Kafka)?",
      "options": [
        "Запускает брокеры",
        "Управляет конфигурацией и координирует кластеры Kafka",
        "Читает сообщения",
        "Проверяет корректность JSON"
      ],
      "answer": 1
    }
  ]
},
{
  "title": "CI/CD и Git — Тест 1",
  "topic": "CI/CD и Git",
  "questions": [
    {
      "question": "Что означает аббревиатура CI?",
      "options": [
        "Code Interaction",
        "Commit Integration",
        "Continuous Integration",
        "Central Instance"
      ],
      "answer": 2
    },
    {
      "question": "Что означает CD в контексте DevOps?",
      "options": [
        "Central Deployment",
        "Continuous Delivery или Continuous Deployment",
        "Code Distribution",
        "Custom Deploy"
      ],
      "answer": 1
    },
    {
      "question": "Для чего используется команда `git clone`?",
      "options": [
        "Удаление репозитория",
        "Создание новой ветки",
        "Копирование удалённого репозитория на локальный компьютер",
        "Отправка изменений"
      ],
      "answer": 2
    },
    {
      "question": "Что делает команда `git pull`?",
      "options": [
        "Загружает изменения из удалённого репозитория и объединяет их с текущей веткой",
        "Удаляет последнюю версию",
        "Сохраняет изменения на сервер",
        "Создаёт новый коммит"
      ],
      "answer": 0
    },
    {
      "question": "Что такое pipeline в CI/CD?",
      "options": [
        "Сервер Git",
        "Сценарий автоматической сборки, тестирования и доставки",
        "Набор issue в Jira",
        "Команда для удаления ветки"
      ],
      "answer": 1
    },
    {
      "question": "Что происходит на этапе 'build' в CI/CD пайплайне?",
      "options": [
        "Проверка требований",
        "Сборка проекта из исходного кода",
        "Создание баг-репортов",
        "Обновление базы данных"
      ],
      "answer": 1
    },
    {
      "question": "Что делает `git status`?",
      "options": [
        "Показывает статус CI-сервера",
        "Очищает коммиты",
        "Отображает текущие изменения в рабочем каталоге",
        "Сравнивает две ветки"
      ],
      "answer": 2
    },
    {
      "question": "Что такое merge в Git?",
      "options": [
        "Создание новой ветки",
        "Объединение изменений из одной ветки в другую",
        "Удаление ветки",
        "Перенос истории коммитов"
      ],
      "answer": 1
    },
    {
      "question": "Что делает тестировщик при падении CI-сборки после коммита?",
      "options": [
        "Игнорирует ошибку",
        "Создаёт баг",
        "Разбирает логи, проверяет, что сломано и сообщает команде",
        "Запускает билд вручную снова"
      ],
      "answer": 2
    },
    {
      "question": "Что делает команда `git checkout`?",
      "options": [
        "Фиксирует изменения",
        "Создаёт issue",
        "Переключает ветки или откатывает файлы",
        "Отправляет изменения в CI"
      ],
      "answer": 2
    }
  ]
},
{
  "title": "CI/CD и Git — Тест 2",
  "topic": "CI/CD и Git",
  "questions": [
    {
      "question": "Какой инструмент чаще всего используется для CI/CD в open-source?",
      "options": ["Postman", "Selenium", "Jenkins", "Figma"],
      "answer": 2
    },
    {
      "question": "Что делает команда `git push`?",
      "options": [
        "Копирует репозиторий",
        "Отправляет коммиты из локальной ветки в удалённую",
        "Создаёт pull request",
        "Обновляет CI-конфигурацию"
      ],
      "answer": 1
    },
    {
      "question": "Что означает 'commit' в Git?",
      "options": [
        "Слияние веток",
        "Сохранение изменений с комментарием",
        "Удаление файла",
        "Создание теста"
      ],
      "answer": 1
    },
    {
      "question": "Что происходит на этапе 'test' в CI-пайплайне?",
      "options": [
        "Развёртывание проекта",
        "Сборка frontend",
        "Запуск автоматических или ручных тестов",
        "Обновление документации"
      ],
      "answer": 2
    },
    {
      "question": "Какая команда используется для создания новой ветки?",
      "options": ["git fork", "git checkout -b <branch>", "git reset", "git merge"],
      "answer": 1
    },
    {
      "question": "Что такое pull request (или merge request)?",
      "options": [
        "Удаление ветки из удалённого репозитория",
        "Запрос на слияние изменений из одной ветки в другую с возможностью ревью",
        "Резервная копия проекта",
        "Слияние коммитов без проверки"
      ],
      "answer": 1
    },
    {
      "question": "Что такое rollback в контексте CI/CD?",
      "options": [
        "Откат до предыдущей стабильной версии",
        "Отмена коммита в Git",
        "Перезапуск пайплайна",
        "Создание временной ветки"
      ],
      "answer": 0
    },
    {
      "question": "Что такое staging в CI/CD?",
      "options": [
        "Промежуточная среда для тестирования перед продом",
        "Ранний билд",
        "Команда в Git",
        "Отчёт о тестах"
      ],
      "answer": 0
    },
    {
      "question": "Какая команда показывает историю коммитов в Git?",
      "options": ["git status", "git history", "git log", "git show"],
      "answer": 2
    },
    {
      "question": "Что делает `.gitignore`?",
      "options": [
        "Запускает CI",
        "Игнорирует конфликты при слиянии",
        "Указывает файлы, которые не нужно отслеживать в репозитории",
        "Удаляет историю коммитов"
      ],
      "answer": 2
    }
  ]
},
{
  "title": "Linux Terminal — Тест 1",
  "topic": "Linux Terminal",
  "questions": [
    {
      "question": "Что делает команда `ls`?",
      "options": [
        "Очищает терминал",
        "Переходит в другую директорию",
        "Показывает список файлов и папок в текущем каталоге",
        "Удаляет файл"
      ],
      "answer": 2
    },
    {
      "question": "Какой командой можно просмотреть содержимое текстового файла в терминале?",
      "options": ["cd", "ls", "cat", "rm"],
      "answer": 2
    },
    {
      "question": "Что делает команда `cd ..`?",
      "options": [
        "Удаляет текущую директорию",
        "Создаёт новую директорию",
        "Переходит в родительскую директорию",
        "Очищает директорию"
      ],
      "answer": 2
    },
    {
      "question": "Команда `pwd` выводит:",
      "options": [
        "Пароль пользователя",
        "Список всех пользователей",
        "Текущий путь (рабочую директорию)",
        "Список процессов"
      ],
      "answer": 2
    },
    {
      "question": "Что делает команда `mkdir test`?",
      "options": [
        "Создаёт файл с именем test",
        "Удаляет директорию test",
        "Переходит в директорию test",
        "Создаёт директорию с именем test"
      ],
      "answer": 3
    },
    {
      "question": "Какая команда используется для удаления файла?",
      "options": ["del", "erase", "rm", "remove"],
      "answer": 2
    },
    {
      "question": "Что делает команда `touch test.txt`?",
      "options": [
        "Создаёт новый текстовый файл или обновляет дату изменения существующего",
        "Открывает файл в редакторе",
        "Удаляет файл",
        "Запускает файл"
      ],
      "answer": 0
    },
    {
      "question": "Как посмотреть первые 10 строк файла?",
      "options": ["head filename.txt", "top filename.txt", "first filename.txt", "cat10 filename.txt"],
      "answer": 0
    },
    {
      "question": "Какая команда показывает текущих пользователей системы?",
      "options": ["who", "users", "ps", "allusers"],
      "answer": 0
    },
    {
      "question": "Как посмотреть логи в реальном времени (например, log.txt)?",
      "options": ["cat log.txt", "tail log.txt", "tail -f log.txt", "open log.txt"],
      "answer": 2
    }
  ]
}
]
